name: Example
variables:
  baseUrl: https://www.saucedemo.com/
  username: standard_user
  password: secret_sauce
  item_text: Sauce Labs Backpack
  signInBtnId: login-button
  productId: sauce-labs-backpack
  signInBtn:
    type: id
    value: $(signInBtnId)
  addToCartBtn:
    type: id
    value: add-to-cart-$(productId)
  removeFromCartBtn:
    type: id
    value: remove-$(productId)
  cartBadge:
    type: class
    value: shopping_cart_badge
  usernameInput:
    type: id
    value: user-name
  logoutLink:
    type: id
    value: logout_sidebar_link
  elementWaitTimeout: 3
steps:
  - name: Open Browser
    type: open-browser
    values:
      browser: chrome
      headless: true
  - name: Open Url
    type: open-url
    values:
      url: $(baseUrl)
  - name: Type username
    type: type
    values:
      text: $(username)
      selector: $(usernameInput)
  - name: Type password
    type: type
    values:
      text: $(password)
      selector:
        type: id
        value: password
  - name: Click on sign in button
    type: click
    values:
      selector: $(signInBtn)
  - name: Wait for items to load
    type: wait
    values:
      selector:
        type: text
        value: $(item_text)
      timeout: $(elementWaitTimeout)
  - name: Click on add backpack
    type: click
    values:
      selector: $(addToCartBtn)
  - name: Check number of items in cart
    type: compare-element-text
    values:
      selector: $(cartBadge)
      compare:
        type: equals
        value: '1'
  - name: Click on remove backpack
    type: click
    values:
      selector: $(removeFromCartBtn)
  - name: Check that there is no items in a cart
    type: wait-to-be-not-present
    values:
      selector: $(cartBadge)
  - name: Click on sort
    type: click
    values:
      selector:
        type: class
        value: product_sort_container
  - name: Click on Price low-high option
    type: click
    values:
      selector:
        type: css
        value: .product_sort_container > [value=lohi]
  - name: Create prices array
    type: set-variable
    values:
      variable: prices
      value: []
  - name: Get price for each item
    type: for-each-element
    values:
      selector:
        type: class
        value: inventory_item_price
      steps:
        - name: Get price
          type: set-variable
          values:
            variable: price
            value: $((await ELEMENT.getText()).trim().substr(1))
        - name: Add price to array
          type: add-to-array-variable
          values:
            value: $(parseFloat(price))
            variable: prices
  - name: Check prices are sorted from low to high
    type: for-each-item
    values:
      array: $(prices)
      steps:
        - name: Compare to previous
          type: compare-numbers
          condition: INDEX > 0
          values:
            compare:
              type: '<='
              value: $(prices[INDEX-1])
            to: $(ITEM)
  - name: Click burger menu
    type: click
    values:
      selector:
        type: id
        value: react-burger-menu-btn
  - name: Wait for sidebar to show
    type: wait-to-be-interactable
    values:
      selector: $(logoutLink)
      timeout: $(elementWaitTimeout)
  - name: Click logout link
    type: click
    values:
      selector: $(logoutLink)
  - name: Wait for login page to load
    type: wait
    values:
      selector: $(usernameInput)
      timeout: $(elementWaitTimeout)
  - name: Make screenshot
    type: screenshot
    runOnFailure: true
    values:
      type: page
